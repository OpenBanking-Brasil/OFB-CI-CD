name: Validate PR and Create Jira Task

on:
  workflow_dispatch:
    inputs:
      SWAGGER_FILE_URL:
        required: true
        type: string
      OLD_SWAGGER_FILE_URL:
        required: true
        type: string
      PR_TITLE:
        required: true
        type: string
      PR_URL:
        required: true
        type: string
      PR_AUTHOR:
        required: true
        type: string

jobs:
  download-swagger:
    runs-on: ubuntu-latest
    steps:
      - name: Baixar Swagger.yaml do PR
        run: |
          curl -L -o swagger.yaml "${{ github.event.inputs.SWAGGER_FILE_URL }}"
          ls -lh swagger.yaml || exit 1

      - name: Verificar o Arquivo
        run: |
          if [ -f "swagger.yaml" ]; then
            echo "swagger.yaml baixado com sucesso!"
            cat swagger.yaml
          else
            echo "Erro: Arquivo Swagger.yaml não encontrado!"
            exit 1
          fi
      - name: Upload spectral_report
        uses: actions/upload-artifact@v4
        with:
          name: swagger
          path: swagger.yaml

      - name: Baixar oldSwagger.yaml do PR
        run: |
          curl -L -o oldSwagger.yaml "${{ github.event.inputs.OLD_SWAGGER_FILE_URL }}"
          ls -lh oldSwagger.yaml || exit 1
  
      - name: Verificar o Arquivo
        run: |
          if [ -f "oldSwagger.yaml" ]; then
            echo "oldSwagger.yaml baixado com sucesso!"
            cat oldSwagger.yaml
          else
            echo "Erro: Arquivo oldSwagger.yaml não encontrado!"
            exit 1
          fi
      - name: Upload spectral_report
        uses: actions/upload-artifact@v4
        with:
          name: oldSwagger
          path: oldSwagger.yaml

  PB33F:
    needs: download-swagger
    uses: ./.github/workflows/pb33f.yaml

  spectral:
    needs: PB33F
    uses: ./.github/workflows/spectral.yaml

  vale:
    needs: spectral
    uses: ./.github/workflows/vale.yaml

  jira:
    needs: vale
    uses: ./.github/workflows/jira.yaml
    with:
      PR_TITLE: ${{ inputs.PR_TITLE }}
      PR_URL: ${{ inputs.PR_URL }}
      PR_AUTHOR: ${{ inputs.PR_AUTHOR }}
    secrets:
      JIRA_URL: ${{ secrets.JIRA_URL }}
      JIRA_USER: ${{ secrets.JIRA_USER }}
      JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
      JIRA_PROJECT: ${{ secrets.JIRA_PROJECT }}
      JIRA_ISSUE_TYPE: ${{ secrets.JIRA_ISSUE_TYPE }}
      JIRA_ISSUE_STATUS: ${{ secrets.JIRA_ISSUE_STATUS }}
